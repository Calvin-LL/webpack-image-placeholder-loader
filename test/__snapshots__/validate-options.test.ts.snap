// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate options should throw an error on the "backgroundColor" option with "#0" value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.backgroundColor \\"#0\\" is not a valid color."
`;

exports[`validate options should throw an error on the "backgroundColor" option with "#03828110" value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.backgroundColor \\"#03828110\\" is not a valid color."
`;

exports[`validate options should throw an error on the "backgroundColor" option with "#MMMMMM" value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.backgroundColor \\"#MMMMMM\\" is not a valid color."
`;

exports[`validate options should throw an error on the "backgroundColor" option with {"r":2,"g":120,"b":24,"a":0.5} value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.backgroundColor {\\"r\\":2,\\"g\\":120,\\"b\\":24,\\"a\\":0.5} is not a valid color."
`;

exports[`validate options should throw an error on the "backgroundColor" option with true value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.backgroundColor should be one of these:
   string | object { … }
   -> Color of background if image contains transparency.
   Details:
    * options.backgroundColor should be a string.
    * options.backgroundColor should be an object:
      object { … }"
`;

exports[`validate options should throw an error on the "color" option with "#0" value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.color \\"#0\\" is not a valid color."
`;

exports[`validate options should throw an error on the "color" option with "#MMMMMM" value 1`] = `
"(Emitted value instead of an instance of Error) Invalid options object. Image Placeholder Loader has been initialised using an options object that does not match the API schema.
      - options.color \\"#MMMMMM\\" is not a valid color."
`;

exports[`validate options should throw an error on the "color" option with true value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.color should be one of these:
   string | object { … }
   -> Color of output image.
   Details:
    * options.color should be a string.
    * options.color should be an object:
      object { … }"
`;

exports[`validate options should throw an error on the "esModule" option with "true" value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.esModule should be a boolean.
   -> By default, webpack-image-placeholder-loader generates JS modules that use the ES modules syntax."
`;

exports[`validate options should throw an error on the "format" option with true value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.format should be one of these:
   \\"base64\\" | \\"hex\\" | \\"rgb\\" | \\"array\\"
   -> Format of output"
`;

exports[`validate options should throw an error on the "size" option with -1 value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.size should be >= 1."
`;

exports[`validate options should throw an error on the "size" option with 0 value 1`] = `
"Invalid options object. Image Placeholder Loader has been initialized using an options object that does not match the API schema.
 - options.size should be >= 1."
`;
